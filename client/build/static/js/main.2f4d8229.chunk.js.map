{"version":3,"sources":["pages/components/MenuButton.tsx","pages/components/FadeModal.tsx","pages/components/Login.tsx","redux/actions/gameActions.ts","pages/components/LoginMenu.tsx","redux/actions/userActions.ts","pages/Home.tsx","pages/CreateGame.tsx","pages/JoinGame.tsx","Game/GameGrid/InputCell.tsx","Game/GameFuncs.tsx","Game/GameGrid/HintCell.tsx","Game/GameGrid/index.tsx","Game/Scoreboard/Scorecard.tsx","Game/Scoreboard/index.tsx","Game/index.tsx","ReplayGame/index.tsx","utils/API.ts","utils/useGetGames.ts","pages/ReplayPage.tsx","App.tsx","redux/reducers/user.ts","redux/reducers/game.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["MenuButton","P","action","className","to","text","children","onClick","FadeModal","useState","display","setDisplay","useEffect","handleHide","setTimeout","handleModal","timer","style","transitionDuration","data-modal","React","Children","map","child","isValidElement","cloneElement","Login","id","setBoard","b","p","type","payload","board","isPlayer","connect","signInSomeAuth","uid","str","provider","firebase","auth","GoogleAuthProvider","window","alert","signInWithPopup","then","res","currentUser","console","warn","catch","err","log","finally","handleLogin","Home","useSelector","state","user","newGame","num","dispatch","getState","conn","emit","size","message","a","x","handleCreate","joinGame","_id","rooms","setRooms","i","handleJoin","InputCell","value","setValue","keyHandler","evt","key","handleTurn","index","document","getElementsByClassName","addEventListener","min","max","n","Number","toString","onChange","val","parseInt","currentTarget","disabled","funcs","initGrid","ta","N","values","Array","fill","players","length","turn","player","autos","autoComplete","getRow","ri","from","keys","e","getCol","ci","getBox","start","boxIndexes","push","getGroupSet","arr","all","concat","Set","testInput","set","has","flat","filter","autoArr","indexes","found","newArr","delete","setArr","boolArr","auto","findIndex","forEach","add","recusive","bigSet","HintCell","GameFuncs","focus","game","hintStyle","setFocus","Math","sqrt","getBorders","errSet","errors","Scorecard","label","isTurn","sum","ScoreBoard","acc","curr","reduce","types","cells","handleErrors","setTurnArr","turnArr","gameState","setGameState","setErrors","hasJoined","setHasJoined","hasQuit","setHasQuit","len","newGrid","on","off","Fragment","canTurn","newErrors","newTurn","gameID","ReplayGame","setTurn","replayBoard","setReplayBoard","slice","handleClick","API","getGamesByUid","axios","get","params","getReplay","useGetBoards","boards","setBoards","data","ReplayPage","useGetGames","selected","setSelected","withRouter","history","useHistory","apps","initializeApp","apiKey","process","authDomain","projectId","appId","location","pathname","path","exact","initialState","string","socketIOClient","transports","reducer","target","undefined","combineReducers","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f4d8229.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./styles/MenuButton.css\";\n\ntype Props = {\n  action: string | ((e?: any) => void);\n  text?: string;\n};\n\nconst MenuButton: React.FC<Props> = (P) => {\n  if (typeof P.action === \"string\") {\n    return (\n      <Link className=\"menu-button\" to={P.action}>\n        {P.text ? P.text : P.children}\n      </Link>\n    );\n  } else {\n    return (\n      <button className=\"menu-button\" onClick={P.action}>\n        {P.text ? P.text : P.children}\n      </button>\n    );\n  }\n};\n\nexport default MenuButton;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./styles/FadeModal.css\";\n\ntype Props = {\n  addClass?: string;\n  timer: number; //milliseconds\n  handleModal: () => void;\n};\n\nconst FadeModal: React.FC<Props> = (P) => {\n  const [display, setDisplay] = useState(false);\n\n  useEffect(() => {\n    setDisplay(true);\n  }, []);\n\n  const handleHide = () => {\n    setDisplay(false);\n    setTimeout(() => {\n      P.handleModal();\n    }, P.timer);\n  };\n\n  return (\n    <div\n      className={`\n      modal-container \n      ${display ? \"show\" : \"hide\"} \n      `}\n      style={{\n        transitionDuration: P.timer + \"ms\",\n      }}\n      data-modal=\"modal\"\n    >\n      {React.Children.map(P.children, (child) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, { handleHide });\n        }\n        return child;\n      })}\n    </div>\n  );\n};\n\nexport default FadeModal;\n","import React from \"react\";\n\ntype Props = {\n  handleModal: (() => void) | false;\n};\n\nconst Login: React.FC<Props> = (P) => {\n  if (!P.handleModal) {\n    return <div id=\"login\"> Signed in </div>;\n  }\n  return (\n    <div id=\"login\" onClick={P.handleModal}>\n      {\" \"}\n      Login{\" \"}\n    </div>\n  );\n};\n\nexport default Login;\n","export const setBoard = (b: Board, p: 1 | 2) => ({\n  type: \"SET_BOARD\",\n  payload: {\n    board: b,\n    isPlayer: p,\n  },\n});\n\nexport const setScore = (player: number, score: number) => ({\n  type: \"SET_SCORE\",\n  payload: {\n    score: {\n      [player]: score,\n    },\n  },\n});\n\nexport const setFocus = (num: number) => ({\n  type: \"SET_FOCUS\",\n  payload: {\n    focus: num,\n  },\n});\n\nexport const setTurnArr = (ta: Turn[]) => ({\n  type: \"SET_TURNS\",\n  payload: {\n    turnArr: ta,\n  },\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nimport MenuButton from \"./MenuButton\";\n\nimport { signInSomeAuth } from \"../../redux/actions/userActions\";\n\nimport \"./styles/LoginMenu.css\";\n\ntype Props = {\n  handleHide: () => void;\n  signInSomeAuth: (uid: string) => void;\n};\n\nconst LoginMenu: React.FC<Props> = (P) => {\n  const handleLogin = (str: string) => {\n    var provider = (() => {\n      switch (str) {\n        case \"GOOGLE\": {\n          return new firebase.auth.GoogleAuthProvider();\n        }\n        default: {\n          window.alert(\n            \"Sorry there was an error with the authetication process\"\n          );\n        }\n      }\n    })();\n\n    if (provider) {\n      firebase\n        .auth()\n        .signInWithPopup(provider)\n        .then((res) => {\n          let uid = firebase.auth().currentUser?.uid;\n\n          if (uid) {\n            P.signInSomeAuth(uid);\n            P.handleHide();\n          } else {\n            console.warn(\"Did not receive uid\");\n          }\n        })\n        .catch((err) => {\n          window.alert(\n            \"Sorry there was an error with the Google provier process\"\n          );\n          console.log(err);\n        })\n        .finally(P.handleHide);\n    }\n  };\n\n  return (\n    <div className=\"modal-content\">\n      <div className=\"modal-header\">\n        <button className=\"fa fa-arrow-left\" onClick={P.handleHide}></button>\n        <h4>Login</h4>\n      </div>\n      <div className=\"modal-body\">\n        <MenuButton action={() => handleLogin(\"GOOGLE\")}>\n          <span className=\"menu-button-icon fa fa-google\"></span> Google\n        </MenuButton>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { signInSomeAuth })(LoginMenu);\n","import { setBoard } from \"./gameActions\";\n\nexport const newGame = (num: 81 | 256, uid: string) => {\n  return (dispatch: any, getState: () => any) => {\n    const { conn } = getState().user;\n    console.log(conn);\n\n    conn.emit(\"NEW_GAME\", { size: num, uid: uid }, async (message: Board) => {\n      let x = await message;\n      dispatch(setBoard(x, 1));\n    });\n  };\n};\n\nexport const joinGame = (_id: string, uid: string) => {\n  return (dispatch: any, getState: () => any) => {\n    const { conn } = getState().user;\n\n    conn.emit(\n      \"JOIN_GAME\",\n      { _id, uid }, //CallBack\n      async (message: Board) => {\n        let x = await message;\n        dispatch(setBoard(x, 2));\n      }\n    );\n  };\n};\n\nexport const signInSomeAuth = (uid: string) => ({\n  type: \"SET_UID\",\n  payload: {\n    uid: uid,\n  },\n});\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport MenuButton from \"./components/MenuButton\";\nimport FadeModal from \"./components/FadeModal\";\nimport Login from \"./components/Login\";\nimport LoginMenu from \"./components/LoginMenu\";\n\nimport \"./styles/MenuContainer.css\";\n\nconst Home: React.FC = () => {\n  const [display, setDisplay] = useState(false);\n  const { uid } = useSelector((state: any) => ({\n    uid: state.user.uid,\n  }));\n\n  const handleModal = () => {\n    setDisplay(!display);\n  };\n\n  return (\n    <div className=\"menu-container\">\n      {display ? (\n        <FadeModal timer={400} handleModal={handleModal}>\n          <LoginMenu\n            handleHide={() => {\n              /* Is assigned in FadeModal */\n              console.warn(\"LoginMenu failed to load proper props\");\n            }}\n          />\n        </FadeModal>\n      ) : null}\n\n      <div className=\"menu-header\">\n        <h1> SuGoKu </h1>\n        <Login handleModal={uid === null ? handleModal : false} />\n      </div>\n\n      <MenuButton action={\"/create\"} text={\"Create Game\"} />\n\n      <MenuButton action={\"/join\"} text={\"Join Game\"} />\n\n      <MenuButton action={\"/replay\"} text={\"Replay Game\"} />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\n// Actions\nimport { newGame } from \"../redux/actions/userActions\";\n\nimport MenuButton from \"./components/MenuButton\";\n\ntype Props = {\n  newGame: (n: 81 | 256, uid: string) => void;\n  uid: string | null;\n};\n\nconst CreateGame: React.FC<Props> = (P) => {\n  const handleCreate = (num: 81 | 256) => {\n    console.log(num);\n    P.newGame(num, P.uid ? P.uid : \"Anon\");\n  };\n\n  return (\n    <div className=\"menu-container\">\n      <div className=\"menu-header\">\n        <h1> Create Game </h1>\n\n        <h4> Select Board Size </h4>\n      </div>\n\n      <MenuButton action={() => handleCreate(81)} text={\"9x9\"} />\n      <MenuButton action={() => handleCreate(256)} text={\"14x14\"} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    uid: state.user.uid,\n  };\n};\n\nexport default connect(mapStateToProps, { newGame })(CreateGame);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Socket } from \"socket.io-client\";\n\nimport MenuButton from \"./components/MenuButton\";\n\nimport { joinGame } from \"../redux/actions/userActions\";\n\ntype Props = {\n  conn: typeof Socket;\n  joinGame: (_id: string, uid: string) => void;\n  uid: string;\n};\n\nconst JoinGame: React.FC<Props> = (P) => {\n  const [rooms, setRooms] = useState<string[]>([]);\n\n  useEffect(() => {\n    P.conn.emit(\"GET_GAMES\", null, (x: string[]) => {\n      setRooms(x);\n    });\n  }, [P.conn]);\n\n  const handleJoin = (_id: string) => {\n    P.joinGame(_id, P.uid ? P.uid : \"Anon\");\n  };\n\n  return (\n    <div className=\"menu-container\">\n      <h1>JoinGame</h1>\n\n      {rooms.map((_id: string, i: number) => {\n        return <MenuButton key={i} text={_id} action={() => handleJoin(_id)} />;\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    conn: state.user.conn,\n    uid: state.user.uid,\n  };\n};\n\nexport default connect(mapStateToProps, { joinGame })(JoinGame);\n","import React, { useState, useEffect } from \"react\";\n\ntype Props = {\n  player: number;\n  value: number;\n  index: number;\n  n: number;\n  handleTurn: (i: number, v: number) => void;\n};\n\nconst InputCell: React.FC<Props> = (P) => {\n  const [value, setValue] = useState<number>(P.value);\n\n  /**************************************************\n  A lot of these commented lines were trying to fix a bug\n  The bug is that the keyup event fires twice,\n  can't seem to fix it and things seem to currently work so leaving it as is for now\n  **************************************************/\n  // const remove = (el: any) => {\n  //   el.removeEventListener('keyup', test);\n  // }\n\n  const keyHandler = (evt: any) => {\n    // console.log(evt);\n    if (((evt as unknown) as KeyboardEvent).key === \"Enter\") {\n      // console.log(value);\n      P.handleTurn(P.index, value);\n      // x = P.handleTurn(P.index, value)\n      // if(x) { remove(evt.currentTarget) };\n      // evt.Handled = true;\n    }\n  };\n\n  useEffect(() => {\n    let x = document.getElementsByClassName(\"infocus\");\n    if (x[0]) {\n      x[0].addEventListener(\"keyup\", keyHandler);\n    }\n  }, [value]);\n\n  // The weird stuff going on in value is to fix leading-zeroes\n  return (\n    <input\n      className={`input-cell ${P.value === 0 ? \"infocus\" : \"nofocus\"}`}\n      type=\"number\"\n      min={0}\n      max={P.n * P.n}\n      value={\n        P.value > 0 ? Number(P.value).toString() : Number(value).toString()\n      }\n      onChange={(evt) => {\n        let val = parseInt(evt.currentTarget.value);\n        setValue(val);\n      }}\n      disabled={P.value > 0}\n    />\n  );\n};\n\nexport default InputCell;\n","/* \nOh boi I get to explain this nightmare and you get to read it.\nThis file infers what the *Grid* state is base on the *Turns*\ninside the *Board* that delivered by the socket server.\n*/\n\nconst funcs = {\n  // This is the heart of this whole operation\n  // it creates the two arrays that will be used to help render the Grid's Cells\n  initGrid: (ta: Turn[], n: number) => {\n    let N = n * n;\n    let values = new Array(N * N).fill(0);\n    let players = new Array(N * N).fill(0);\n\n    /**************************\n    The order here is important\n    ***************************/\n    for (let i = 0; i < ta.length; i++) {\n      let turn = ta[i];\n      // First add the turn to the array\n      values[turn.index] = turn.value;\n      players[turn.index] = turn.player;\n\n      // Then get auto completes\n      let autos = funcs.autoComplete(turn.index, values, 3);\n      console.log(autos);\n      if (autos) {\n        for (let a of autos) {\n          if (a.value !== 0) {\n            values[a.index] = a.value;\n            players[a.index] = turn.player;\n          }\n        }\n      }\n    }\n\n    return { values, players };\n  },\n\n  // The next three functions help calculate how the Sudoku grid should be organized\n  // They only return INDEXES that are meant to point to one of the arrays from initGrid\n  // They do NOT return actual values from said arrays\n  getRow: (index: number, n: number) => {\n    let N = n * n;\n    let ri = ~~(index / N) * N;\n    let rowIndexes: number[] = Array.from(Array(N).keys()).map((e: number) => {\n      return ri + e;\n    });\n\n    return rowIndexes;\n  },\n\n  getCol: (index: number, n: number) => {\n    let N = n * n;\n    let ci = index % N;\n\n    let colIndexes: number[] = Array.from(Array(N).keys()).map((e: number) => {\n      return ci + N * e;\n    });\n\n    return colIndexes;\n  },\n\n  getBox: (index: number, n: number) => {\n    let N = n * n;\n    let rstart = ~~(index / (N * n));\n    let cstart = ~~((index % N) / n);\n    let start = rstart * N * n + cstart * n;\n    // console.log(start);\n\n    let boxIndexes: number[] = [];\n\n    for (let ri = 0; ri < n; ri++) {\n      for (let ci = 0; ci < n; ci++) {\n        boxIndexes.push(start + ci + ri * N);\n      }\n    }\n\n    return boxIndexes;\n  },\n\n  // This DOES return values, but inside of a set\n  // This is particularly useful for displaying Hints\n  getGroupSet: (index: number, arr: number[], n: number) => {\n    // console.time('getGroupSet');\n\n    let indexes = funcs\n      .getBox(index, n)\n      .concat(funcs.getCol(index, n))\n      .concat(funcs.getRow(index, n));\n    let all = indexes.map((e: number) => {\n      return arr[e];\n    });\n\n    let set = new Set(all);\n\n    // console.timeEnd('getGroupSet');\n    return set;\n  },\n\n  // Pretty simple, tests user input;\n  testInput: (index: number, arr: number[], n: number, value: number) => {\n    let set = funcs.getGroupSet(index, arr, n);\n\n    if (value > 0 && value <= n * n) {\n      if (set.has(value)) {\n        let indexes = Array.from(\n          new Set(\n            [\n              funcs.getRow(index, n),\n              funcs.getCol(index, n),\n              funcs.getBox(index, n),\n            ].flat()\n          )\n        );\n\n        return indexes.filter((e: number) => arr[e] === value);\n      } else {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  },\n\n  // I'm sorry I almost completely forgot how this works\n  autoComplete: (\n    index: number,\n    arr: number[],\n    n: number,\n    autoArr: AutoComplete[] = []\n  ): any => {\n    let indexes = new Set(\n      [\n        funcs.getRow(index, n),\n        funcs.getCol(index, n),\n        funcs.getBox(index, n),\n      ].flat()\n    );\n\n    let found = Array.from(indexes)\n      .map((e: any) => {\n        return {\n          set: funcs.getGroupSet(e, arr, n),\n          index: e,\n        };\n      })\n      .filter((e) => e.set.size === n * n && arr[e.index] === 0);\n    console.log(found);\n\n    if (found.length > 0) {\n      let newArr = [...arr];\n\n      let autos = found.map((e) => {\n        e.set.delete(0);\n        let setArr = Array.from(e.set);\n        let boolArr = Array(n * n).fill(false);\n\n        for (let i = 0; i < setArr.length; i++) {\n          boolArr[setArr[i] - 1] = true;\n        }\n\n        let auto = {\n          index: e.index,\n          value: boolArr.findIndex((b: boolean) => !b) + 1,\n        };\n\n        newArr[auto.index] = auto.value;\n        found.forEach((e) => e.set.add(auto.value));\n\n        return auto;\n      });\n\n      // check if autocompleted cell will cause more autocompletes\n      let recusive = autos.map((e) => {\n        return funcs.autoComplete(e.index, newArr, n, [...autoArr, e]);\n      });\n\n      // let bigSet = new Set(autos.concat(recusive).flat());\n      let bigSet = autos.concat(recusive).flat();\n      console.log(bigSet);\n      return Array.from(bigSet);\n    } else {\n      // if no autocompletes were found, return what we got (or empty array)\n      return autoArr;\n    }\n  },\n};\n\nexport default funcs;\n/*     0        1        2\n0  00 01 02 03 04 05 06 07 08\n1  09 10 11 12 13 14 15 16 17 \n2  18 19 20 21 22 23 24 25 26 \n-      3        4        5\n3  27 28 29 30 31 32 33 34 35 \n4  36 37 38 39 40 41 42 43 44\n5  45 46 47 48 49 50 51 52 53 \n-      6        7        9\n6  54 55 56 57 58 59 60 61 62 \n7  63 64 65 66 67 68 69 70 71 \n8  72 73 74 75 76 77 78 79 80\n*/\n","import React from \"react\";\n\nimport GameFuncs from \"../GameFuncs\";\n\nimport \"./styles/HintCell.css\";\n\ntype Props = {\n  index: number;\n  n: number;\n  values: number[];\n};\n\nconst HintCell: React.FC<Props> = (P) => {\n  // console.log('HINT: ' + P.index);\n\n  // This array is created from a set, and stores the valid inputs for this cell as integers\n  const set = Array.from(GameFuncs.getGroupSet(P.index, P.values, P.n));\n  // We need n^2 hints so we create a n^2 array of booleans\n  let arr = Array(P.n * P.n).fill(false);\n  // Go through set and flip the necessary booleans\n  for (let x of set) {\n    if (x > 0) {\n      arr[x - 1] = true;\n    }\n  }\n\n  // map array and either give an integer or whitespace\n  return (\n    <div className={`hint-cell hint-cell-${P.n}`}>\n      {arr.map((e: boolean, i: number) => {\n        return e ? <div key={i}>{i + 1}</div> : <div key={i}>{\"\\xa0\"}</div>;\n      })}\n    </div>\n  );\n};\n\nexport default HintCell;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport InputCell from \"./InputCell\";\nimport HintCell from \"./HintCell\";\n\nimport { setFocus } from \"../../redux/actions/gameActions\";\n\nimport \"./styles/GameCell.css\";\n\ntype Props = {\n  players: number[];\n  values: number[];\n  errors: number[];\n  focus: number;\n  hintStyle: \"default\" | \"inverse\";\n  handleTurn: (i: number, v: number) => void;\n  setFocus: (n: number) => void;\n};\n\nconst GameGrid: React.FC<Props> = (P) => {\n  const n = Math.sqrt(Math.sqrt(P.values.length));\n\n  // This function returns a string that gets added to the grid-cell's class\n  const getBorders = (i: number) => {\n    let col = i % n;\n    let row = ~~(i / (n * n)) % n;\n    let str = \"\";\n\n    // is the cell at the VERY left\n    if (i % (n * n) === 0) {\n      str += \"left \";\n    }\n    // is the cell on the right side of a box\n    if (col === n - 1) {\n      str += \"right \";\n    }\n    // is the cell at the VERY top\n    if (~~(i / (n * n)) === 0) {\n      str += \"top \";\n    }\n    // is the cell on the bottom of a box\n    if (row === n - 1) {\n      str += \"bottom \";\n    }\n    return str;\n  };\n\n  let errSet = new Set(P.errors);\n\n  return (\n    <div className={`grid-container-${n}`}>\n      {P.values.map((value: number, index: number) => {\n        return (\n          <div\n            key={index}\n            className={`grid-cell ${getBorders(index)}cell-size-${n} player-${\n              P.players[index]\n            } ${errSet.has(index) ? \"cell-error\" : \"\"}`}\n            onClick={() => P.setFocus(index)}\n          >\n            {/* If player input was blocked, add a dot to highlight this is causing the block */}\n            {errSet.has(index) ? (\n              <div className=\"error-dot\">\n                <div></div>\n              </div>\n            ) : null}\n\n            {P.focus === index || value > 0 ? (\n              <InputCell\n                player={P.players[index]}\n                value={value}\n                index={index}\n                n={n}\n                handleTurn={P.handleTurn}\n              />\n            ) : (\n              <HintCell index={index} n={n} values={P.values} />\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    focus: state.game.focus,\n    hintStyle: state.game.hintStyle,\n  };\n};\n\nexport default connect(mapStateToProps, { setFocus })(GameGrid);\n","import React from \"react\";\n\ntype Props = {\n  label: 1 | 2;\n  isPlayer: 1 | 2;\n  sum: number;\n  isTurn: boolean;\n};\n\nconst Scorecard: React.FC<Props> = (P) => {\n  return (\n    <div className=\"score-card\">\n      <div\n        className={`player-dot player-${P.label} ${P.isTurn ? \"isturn\" : null}`}\n      >\n        &nbsp;\n      </div>\n      <h4 className={`player-label`}>\n        {P.isPlayer === P.label ? \"You\" : \"Them\"}:&nbsp;\n        {P.sum}\n      </h4>\n    </div>\n  );\n};\n\nexport default Scorecard;\n","import React from \"react\";\n\nimport Scorecard from \"./Scorecard\";\n\nimport \"./styles/Scoreboard.css\";\n\ntype Props = {\n  players: number[];\n  errors: GameErrors;\n  isTurn: 1 | 2;\n  isPlayer: 1 | 2;\n};\n\nconst ScoreBoard: React.FC<Props> = (P) => {\n  const sum = (acc: number, curr: number) => acc + curr;\n\n  // Error.types is an array of strings which contains what errors need to be displayed\n  const handleErrors = (e: string, i: number) => {\n    switch (e) {\n      case \"BAD_INPUT\": {\n        return (\n          <div key={i} className=\"error\">\n            Move was blocked by {P.errors.cells.length > 1 ? \"cells\" : \"cell\"}:\n            {\"\\xa0\"}\n            {P.errors.cells.map((e: number, i: number) => {\n              return (\n                <span key={i}>\n                  {P.errors.cells.length - 1 !== i ? e + \",\\xa0\" : e}\n                </span>\n              );\n            })}\n          </div>\n        );\n      }\n      case \"NOT_TURN\": {\n        return (\n          <div key={i} className=\"error\">\n            It's not your turn\n          </div>\n        );\n      }\n      case \"BIG_NUM\": {\n        return (\n          <div key={i} className=\"error\">\n            Number must be less than {Math.sqrt(P.players.length) + 1}\n          </div>\n        );\n      }\n      case \"ZERO_NUM\": {\n        return (\n          <div key={i} className=\"error\">\n            Number must be greater than 0\n          </div>\n        );\n      }\n      default: {\n        return (\n          <div key={i} className=\"error\">\n            Error\n          </div>\n        );\n      }\n    }\n  };\n\n  return (\n    <div className=\"game-sidebar-left\">\n      <h2>Score</h2>\n      {/* Just add all the '1's inside of the player array to get score*/}\n      <Scorecard\n        isTurn={P.isTurn === 1}\n        isPlayer={P.isPlayer}\n        label={1}\n        sum={P.players.filter((e) => e === 1).reduce(sum, 0)}\n      />\n      {/* Add all the '2's inside the player array and divide to get score */}\n      <Scorecard\n        isTurn={P.isTurn === 2}\n        isPlayer={P.isPlayer}\n        label={2}\n        sum={P.players.filter((e) => e === 2).reduce(sum, 0) / 2}\n      />\n      {P.errors.types.map((e: string, i) => handleErrors(e, i))}\n    </div>\n  );\n};\n\nexport default ScoreBoard;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Socket } from \"socket.io-client\";\n\nimport GameGrid from \"./GameGrid\";\nimport ScoreBord from \"./Scoreboard\";\n\nimport { setTurnArr } from \"../redux/actions/gameActions\";\n\nimport GameFuncs from \"./GameFuncs\";\n\nimport \"./styles/Game.css\";\n\ntype GameState = {\n  values: number[];\n  players: number[];\n};\n\ntype Props = {\n  conn?: typeof Socket;\n  board: Board;\n  focus: number;\n  hintStyle: \"default\" | \"inverse\";\n  isPlayer: 1 | 2;\n  setTurnArr: (ta: Turn[]) => void;\n};\n\nconst Game: React.FC<Props> = (P) => {\n  // This n value is very important,\n  // helps determine things like the size of grid and grid coordinates\n  const n = Math.sqrt(Math.sqrt(P.board.size));\n\n  // These two arrays help render the GameGrid and keep score\n  const [gameState, setGameState] = useState<GameState>({\n    values: Array(P.board.size).fill(0),\n    players: Array(P.board.size).fill(0),\n  });\n\n  // States to store errors and to help with listeners\n  const [errors, setErrors] = useState<GameErrors>({ types: [], cells: [] });\n  const [hasJoined, setHasJoined] = useState(\n    P.conn ? (P.isPlayer === 2 ? true : false) : true\n  );\n  const [hasQuit, setHasQuit] = useState(false);\n  // Determine player turn\n  const turnArr = P.board.turnArr,\n    len = turnArr.length;\n  const isTurn = len > 0 ? (turnArr[len - 1].player === 1 ? 2 : 1) : 1;\n\n  useEffect(() => {\n    const newGrid = GameFuncs.initGrid(P.board.turnArr, n);\n    if (newGrid.values !== gameState.values) {\n      setGameState(newGrid);\n    }\n\n    if (P.conn) {\n      P.conn.on(\"PLAYER_JOIN\", () => {\n        setHasJoined(true);\n      });\n      P.conn.on(\"USER_QUIT\", () => {\n        setHasQuit(true);\n      });\n      P.conn.on(\"UPDATE_TURN\", (message: any) => {\n        P.setTurnArr(message.turnArr);\n      });\n\n      return () => {\n        P.conn!.off(\"UPDATE_TURN\");\n        P.conn!.off(\"USER_QUIT\");\n        P.conn!.off(\"UPDATE_TURN\");\n      };\n    }\n  }, [P.board, hasQuit]);\n\n  // BUG Somehow a value of \"151\" will turn into \"15\" and become a potentially valid\n  // This gets called inside InputCell\n  const handleTurn = (index: number, value: number) => {\n    if (P.conn) {\n      console.log(isTurn);\n\n      //initialize variables\n      // const turnArr = P.board.turnArr, len = turnArr.length;\n      const testInput = GameFuncs.testInput(index, gameState.values, n, value);\n      const canTurn = P.isPlayer === isTurn;\n      let newErrors: GameErrors = { types: [], cells: [] };\n\n      //Make sure input is valid\n      if (testInput === true && canTurn && value > 0 && value <= n * n) {\n        const newTurn: Turn = {\n          gameID: P.board._id,\n          player: P.isPlayer,\n          index: index,\n          value: value,\n        };\n\n        //Send new turn\n        P.conn.emit(\"ADD_TURN\", newTurn);\n      }\n\n      // Handle Errors\n      if (typeof testInput !== \"boolean\" && value !== 0) {\n        newErrors = {\n          types: [...newErrors.types, \"BAD_INPUT\"],\n          cells: testInput,\n        };\n      }\n      if (!canTurn) {\n        newErrors.types.push(\"NOT_TURN\");\n      }\n      if (value < 1) {\n        newErrors.types.push(\"ZERO_NUM\");\n      }\n      if (value > n * n) {\n        newErrors.types.push(\"BIG_NUM\");\n      }\n      setErrors(newErrors);\n\n      // This was trying to fix something in InputCell\n      // if(newErrors.types.length > 0) {\n      //   return false;\n      // } else {\n      //   return true;\n      // }\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      {hasQuit ? (\n        <div className=\"pre-game\">\n          <h4> Uh oh, it looks like the other player quit the game! </h4>\n          <h4>\n            {\" \"}\n            Currently there is no way for someone to rejoin a game, sorry :(\n          </h4>\n        </div>\n      ) : hasJoined ? (\n        <React.Fragment>\n          <ScoreBord\n            players={gameState.players}\n            errors={errors}\n            isTurn={isTurn}\n            isPlayer={P.isPlayer}\n          />\n          <GameGrid\n            errors={errors.cells}\n            players={gameState.players}\n            values={gameState.values}\n            handleTurn={handleTurn}\n          />\n\n          <div className=\"game-sidebar-right\">&nbsp;</div>\n        </React.Fragment>\n      ) : (\n        <div className=\"pre-game\">\n          <h4>Waiting for player to join you</h4>\n          <h4>You're Game ID is: {P.board._id} </h4>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    focus: state.game.focus,\n    hintStyle: state.game.hintStyle,\n    isPlayer: state.game.isPlayer,\n  };\n};\n\nexport default connect(mapStateToProps, { setTurnArr })(Game);\n","import React, { useState, useEffect } from \"react\";\n\nimport Game from \"../Game\";\n\nimport \"./ReplayGame.css\";\n\ntype Props = {\n  board: Board;\n};\n\nconst ReplayGame: React.FC<Props> = (P) => {\n  const [turn, setTurn] = useState(1);\n  const [replayBoard, setReplayBoard] = useState<Board>(P.board);\n\n  useEffect(() => {\n    let board: Board = {\n      ...P.board,\n      turnArr: P.board.turnArr.slice(0, turn),\n    };\n\n    console.log(board);\n\n    setReplayBoard(board);\n  }, [turn]);\n\n  const handleClick = (n: -1 | 1) => {\n    if (turn + n > P.board.turnArr.length) {\n      console.log(\"too much\");\n    } else if (turn + n < 1) {\n      console.log(\"too little\");\n    } else {\n      console.log(n);\n      setTurn(turn + n);\n    }\n  };\n\n  return (\n    <div className=\"replay-container\">\n      <Game board={replayBoard} />\n      <div className=\"replay-inputs\">\n        <button className=\"fa fa-arrow-left\" onClick={() => handleClick(-1)} />\n        <div>{`${turn} / ${P.board.turnArr.length}`}</div>\n        <button className=\"fa fa-arrow-right\" onClick={() => handleClick(1)} />\n      </div>\n    </div>\n  );\n};\n\nexport default ReplayGame;\n","import axios from \"axios\";\n\nconst API = {\n  getGamesByUid: (uid: string) => {\n    return axios.get(\"/_replays\", { params: {uid} });\n  },\n  getReplay: (_id: string) => {\n    return axios.get(\"/_replay\", { params: {_id} });\n  }\n};\n\nexport default API;\n","import { useState, useEffect } from \"react\";\nimport API from \"./API\";\n\nconst useGetBoards = (uid: string) => {\n  const [boards, setBoards] = useState<string[]>([]);\n\n  useEffect(() => {\n    API.getGamesByUid(uid)\n      .then((res) => {\n        const boards: string[] = res.data.boards;\n        setBoards(boards);\n      })\n      .catch((err) => console.log(err));\n  }, [uid]);\n\n  return boards;\n};\n\nexport default useGetBoards;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport ReplayGame from \"../ReplayGame\";\nimport MenuButton from \"./components/MenuButton\";\n\nimport useGetGames from \"../utils/useGetGames\";\nimport API from \"../utils/API\";\n\nconst ReplayPage: React.FC = () => {\n  const uid: string = useSelector((state: any) => {\n    return state.user.uid;\n  });\n  const boards = useGetGames(uid ? uid : \"\");\n  const [selected, setSelected] = useState<Board | null>(null);\n\n  if (uid === null) {\n    return (\n      <div>\n        You need to be signed into an account to record games and access replays\n      </div>\n    );\n  }\n\n  if (selected !== null) {\n    return <ReplayGame board={selected} />;\n  }\n\n  const handleReplay = (_id: string) => {\n    API.getReplay(_id)\n      .then((res) => {\n        const board: Board = res.data.board;\n        setSelected(board);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"menu-container\">\n      <div className=\"menu-header\">\n        <h1> Replays </h1>\n      </div>\n\n      {boards.map((e: string) => {\n        return <MenuButton key={e} text={e} action={() => handleReplay(e)} />;\n      })}\n    </div>\n  );\n};\n\nexport default ReplayPage;\n","import React, { useEffect } from \"react\";\nimport { withRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport { Socket } from \"socket.io-client\";\nimport { connect } from \"react-redux\";\n\n//Pages\nimport Home from \"./pages/Home\";\nimport CreateGame from \"./pages/CreateGame\";\nimport JoinGame from \"./pages/JoinGame\";\nimport ReplayPage from \"./pages/ReplayPage\";\nimport Game from \"./Game\";\n\nimport firebase from \"firebase/app\";\n\nimport \"./App.css\";\n\ninterface Props {\n  conn: typeof Socket;\n  board: Board;\n}\n\nconst App: React.FC<Props> = (P) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    if (firebase.apps.length === 0) {\n      firebase.initializeApp({\n        apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n        authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n        projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n        appId: process.env.REACT_APP_FIREBASE_APP_ID,\n      });\n    }\n    if (P.board !== null && history.location.pathname !== \"/game\") {\n      history.push(\"/game\");\n    }\n  }, [P.board]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/game\">\n          <Game board={P.board} conn={P.conn} />\n        </Route>\n\n        <Route path=\"/replay\">\n          <ReplayPage />\n        </Route>\n\n        <Route path=\"/create\">\n          <CreateGame />\n        </Route>\n\n        <Route path=\"/join\">\n          <JoinGame />\n        </Route>\n\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    conn: state.user.conn,\n    board: state.game.board,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {})(App));\n","import socketIOClient, { Socket } from \"socket.io-client\";\n\ninterface Action {\n  type: string;\n  payload: any;\n}\n\ntype IS = {\n  string: string;\n  conn: typeof Socket;\n  uid: string | null;\n};\n\nconst initialState: IS = {\n  string: \"\",\n  conn: socketIOClient(\n    process.env.NODE_ENV === \"production\"\n      ? \"wss://sudoku-chess2.herokuapp.com/\"\n      : \"http://localhost:3001\",\n    {\n      transports: [\"websocket\"],\n    }\n  ),\n  uid: null,\n};\n\nconst reducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case \"TEST\": {\n      const { string } = action.payload;\n\n      return {\n        ...state,\n        string: string,\n      };\n    }\n\n    case \"SET_UID\": {\n      const { uid } = action.payload;\n\n      return {\n        ...state,\n        uid: uid,\n      };\n    }\n\n    default: {\n      return { ...state };\n    }\n  }\n};\n\nexport default reducer;\n","type iS = {\n  board: Board | null;\n  target: number;\n  hintStyle: \"default\" | \"inverse\";\n  focus: number;\n  isPlayer: undefined | 1 | 2;\n};\n\nconst initialState: iS = {\n  board: null,\n  target: 0,\n  hintStyle: \"default\",\n  focus: 0,\n  isPlayer: undefined,\n};\n\nconst reducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case \"SET_BOARD\": {\n      const { board, isPlayer } = action.payload;\n      return {\n        ...state,\n        board: board,\n        isPlayer: isPlayer,\n      };\n    }\n\n    case \"SET_FOCUS\": {\n      const { focus } = action.payload;\n      return {\n        ...state,\n        focus: focus,\n      };\n    }\n\n    case \"SET_TURNS\": {\n      const { turnArr } = action.payload;\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          turnArr,\n        },\n      };\n    }\n\n    default: {\n      return { ...state };\n    }\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\n\nimport user from \"./user\";\nimport game from \"./game\";\n\nexport default combineReducers({\n  user,\n  game,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Router>\n        <App />\n      </Router>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}