[{"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/CreateGame.tsx":"1","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/Home.tsx":"2","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/App.tsx":"3","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/index.tsx":"4","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/Game/GameFuncs.tsx":"5","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/Game/GameGrid/index.tsx":"6","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/components/Login.tsx":"7","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/redux/actions/userActions.ts":"8","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/Game/GameGrid/InputCell.tsx":"9","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/components/FadeModal.tsx":"10","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/components/LoginMenu.tsx":"11","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/components/MenuButton.tsx":"12","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/Game/Scoreboard/Scorecard.tsx":"13","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/redux/store.ts":"14","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/redux/reducers/game.ts":"15","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/Game/GameGrid/HintCell.tsx":"16","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/redux/reducers/user.ts":"17","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/JoinGame.tsx":"18","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/redux/reducers/index.ts":"19","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/redux/actions/gameActions.ts":"20","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/Game/index.tsx":"21"},{"size":910,"mtime":1614958978109,"results":"22","hashOfConfig":"23"},{"size":1195,"mtime":1614961335922,"results":"24","hashOfConfig":"23"},{"size":1635,"mtime":1614812658132,"results":"25","hashOfConfig":"23"},{"size":710,"mtime":1614266988422,"results":"26","hashOfConfig":"23"},{"size":5337,"mtime":1614958978101,"results":"27","hashOfConfig":"23"},{"size":2417,"mtime":1614812217017,"results":"28","hashOfConfig":"23"},{"size":325,"mtime":1614961330587,"results":"29","hashOfConfig":"23"},{"size":809,"mtime":1614958978126,"results":"30","hashOfConfig":"23"},{"size":1648,"mtime":1614266214783,"results":"31","hashOfConfig":"23"},{"size":902,"mtime":1614959519295,"results":"32","hashOfConfig":"23"},{"size":1770,"mtime":1614960687975,"results":"33","hashOfConfig":"23"},{"size":566,"mtime":1614873459831,"results":"34","hashOfConfig":"23"},{"size":501,"mtime":1614266233732,"results":"35","hashOfConfig":"23"},{"size":233,"mtime":1614209266619,"results":"36","hashOfConfig":"23"},{"size":917,"mtime":1614209266607,"results":"37","hashOfConfig":"23"},{"size":941,"mtime":1614266287646,"results":"38","hashOfConfig":"23"},{"size":872,"mtime":1614958978126,"results":"39","hashOfConfig":"23"},{"size":1064,"mtime":1614958978110,"results":"40","hashOfConfig":"23"},{"size":150,"mtime":1614209266610,"results":"41","hashOfConfig":"23"},{"size":484,"mtime":1614209266592,"results":"42","hashOfConfig":"23"},{"size":4534,"mtime":1614266186480,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j2uzk6",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/CreateGame.tsx",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/Home.tsx",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/App.tsx",["92"],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/index.tsx",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/Game/GameFuncs.tsx",[],["93","94"],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/Game/GameGrid/index.tsx",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/components/Login.tsx",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/redux/actions/userActions.ts",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/Game/GameGrid/InputCell.tsx",["95"],"import React, { useState, useEffect } from \"react\";\n\ntype Props = {\n  player: number;\n  value: number;\n  index: number;\n  n: number;\n  handleTurn: (i: number, v: number) => void;\n};\n\nconst InputCell: React.FC<Props> = (P) => {\n  const [value, setValue] = useState<number>(P.value);\n\n  /**************************************************\n  A lot of these commented lines were trying to fix a bug\n  The bug is that the keyup event fires twice,\n  can't seem to fix it and things seem to currently work so leaving it as is for now\n  **************************************************/\n  // const remove = (el: any) => {\n  //   el.removeEventListener('keyup', test);\n  // }\n\n  const keyHandler = (evt: any) => {\n    // console.log(evt);\n    if (((evt as unknown) as KeyboardEvent).key === \"Enter\") {\n      // console.log(value);\n      P.handleTurn(P.index, value);\n      // x = P.handleTurn(P.index, value)\n      // if(x) { remove(evt.currentTarget) };\n      // evt.Handled = true;\n    }\n  };\n\n  useEffect(() => {\n    let x = document.getElementsByClassName(\"infocus\");\n    if (x[0]) {\n      x[0].addEventListener(\"keyup\", keyHandler);\n    }\n  }, [value]);\n\n  // The weird stuff going on in value is to fix leading-zeroes\n  return (\n    <input\n      className={`input-cell ${P.value === 0 ? \"infocus\" : \"nofocus\"}`}\n      type=\"number\"\n      min={0}\n      max={P.n * P.n}\n      value={\n        P.value > 0 ? Number(P.value).toString() : Number(value).toString()\n      }\n      onChange={(evt) => {\n        let val = parseInt(evt.currentTarget.value);\n        setValue(val);\n      }}\n      disabled={P.value > 0}\n    />\n  );\n};\n\nexport default InputCell;\n","/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/components/FadeModal.tsx",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/components/LoginMenu.tsx",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/components/MenuButton.tsx",[],["96","97"],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/Game/Scoreboard/Scorecard.tsx",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/redux/store.ts",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/redux/reducers/game.ts",[],["98","99"],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/Game/GameGrid/HintCell.tsx",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/redux/reducers/user.ts",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/pages/JoinGame.tsx",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/redux/reducers/index.ts",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/redux/actions/gameActions.ts",[],"/home/michael/Dev/HOMEWORK/sudoku-chess2/client/src/Game/index.tsx",["100"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Socket } from \"socket.io-client\";\n\nimport GameGrid from \"./GameGrid\";\nimport ScoreBord from \"./Scoreboard\";\n\nimport { setTurnArr } from \"../redux/actions/gameActions\";\n\nimport GameFuncs from \"./GameFuncs\";\n\nimport \"./styles/Game.css\";\n\ntype GameState = {\n  values: number[];\n  players: number[];\n};\n\ntype Props = {\n  conn: typeof Socket;\n  board: Board;\n  focus: number;\n  hintStyle: \"default\" | \"inverse\";\n  isPlayer: 1 | 2;\n  setTurnArr: (ta: Turn[]) => void;\n};\n\nconst Game: React.FC<Props> = (P) => {\n  // This n value is very important,\n  // helps determine things like the size of grid and grid coordinates\n  const n = Math.sqrt(Math.sqrt(P.board.size));\n\n  // These two arrays help render the GameGrid and keep score\n  const [gameState, setGameState] = useState<GameState>({\n    values: Array(P.board.size).fill(0),\n    players: Array(P.board.size).fill(0),\n  });\n\n  // States to store errors and to help with listeners\n  const [errors, setErrors] = useState<GameErrors>({ types: [], cells: [] });\n  const [hasJoined, setHasJoined] = useState(P.isPlayer === 2 ? true : false);\n  const [hasQuit, setHasQuit] = useState(false);\n  // Determine player turn\n  const turnArr = P.board.turnArr,\n    len = turnArr.length;\n  const isTurn = len > 0 ? (turnArr[len - 1].player === 1 ? 2 : 1) : 1;\n\n  useEffect(() => {\n    const newGrid = GameFuncs.initGrid(P.board.turnArr, n);\n    if (newGrid.values !== gameState.values) {\n      setGameState(newGrid);\n    }\n\n    P.conn.on(\"PLAYER_JOIN\", () => {\n      setHasJoined(true);\n    });\n    P.conn.on(\"USER_QUIT\", () => {\n      setHasQuit(true);\n    });\n    P.conn.on(\"UPDATE_TURN\", (message: any) => {\n      P.setTurnArr(message.turnArr);\n    });\n\n    return () => {\n      P.conn.off(\"UPDATE_TURN\");\n      P.conn.off(\"USER_QUIT\");\n      P.conn.off(\"UPDATE_TURN\");\n    };\n  }, [P.board, hasQuit]);\n\n  // BUG Somehow a value of \"151\" will turn into \"15\" and become a potentially valid\n  // This gets called inside InputCell\n  const handleTurn = (index: number, value: number) => {\n    console.log(isTurn);\n\n    //initialize variables\n    // const turnArr = P.board.turnArr, len = turnArr.length;\n    const testInput = GameFuncs.testInput(index, gameState.values, n, value);\n    const canTurn = P.isPlayer === isTurn;\n    let newErrors: GameErrors = { types: [], cells: [] };\n\n    //Make sure input is valid\n    if (testInput === true && canTurn && value > 0 && value <= n * n) {\n      const newTurn: Turn = {\n        gameID: P.board._id,\n        player: P.isPlayer,\n        index: index,\n        value: value,\n      };\n\n      //Send new turn\n      P.conn.emit(\"ADD_TURN\", newTurn);\n    }\n\n    // Handle Errors\n    if (typeof testInput !== \"boolean\" && value !== 0) {\n      newErrors = {\n        types: [...newErrors.types, \"BAD_INPUT\"],\n        cells: testInput,\n      };\n    }\n    if (!canTurn) {\n      newErrors.types.push(\"NOT_TURN\");\n    }\n    if (value < 1) {\n      newErrors.types.push(\"ZERO_NUM\");\n    }\n    if (value > n * n) {\n      newErrors.types.push(\"BIG_NUM\");\n    }\n    setErrors(newErrors);\n\n    // This was trying to fix something in InputCell\n    // if(newErrors.types.length > 0) {\n    //   return false;\n    // } else {\n    //   return true;\n    // }\n  };\n\n  return (\n    <div className=\"game-container\">\n      {hasQuit ? (\n        <div className=\"pre-game\">\n          <h4> Uh oh, it looks like the other player quit the game! </h4>\n          <h4>\n            {\" \"}\n            Currently there is no way for someone to rejoin a game, sorry :(\n          </h4>\n        </div>\n      ) : hasJoined ? (\n        <React.Fragment>\n          <ScoreBord\n            players={gameState.players}\n            errors={errors}\n            isTurn={isTurn}\n            isPlayer={P.isPlayer}\n          />\n          <GameGrid\n            errors={errors.cells}\n            players={gameState.players}\n            values={gameState.values}\n            handleTurn={handleTurn}\n          />\n\n          <div className=\"game-sidebar-right\">&nbsp;</div>\n        </React.Fragment>\n      ) : (\n        <div className=\"pre-game\">\n          <h4>Waiting for player to join you</h4>\n          <h4>You're Game ID is: {P.board._id} </h4>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    focus: state.game.focus,\n    hintStyle: state.game.hintStyle,\n    isPlayer: state.game.isPlayer,\n  };\n};\n\nexport default connect(mapStateToProps, { setTurnArr })(Game);\n",["101","102"],{"ruleId":"103","severity":1,"message":"104","line":38,"column":6,"nodeType":"105","endLine":38,"endColumn":15,"suggestions":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":39,"column":6,"nodeType":"105","endLine":39,"endColumn":13,"suggestions":"112"},{"ruleId":"107","replacedBy":"113"},{"ruleId":"109","replacedBy":"114"},{"ruleId":"107","replacedBy":"115"},{"ruleId":"109","replacedBy":"116"},{"ruleId":"103","severity":1,"message":"117","line":69,"column":6,"nodeType":"105","endLine":69,"endColumn":24,"suggestions":"118"},{"ruleId":"107","replacedBy":"119"},{"ruleId":"109","replacedBy":"120"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["121"],"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"React Hook useEffect has a missing dependency: 'keyHandler'. Either include it or remove the dependency array.",["124"],["122"],["123"],["122"],["123"],"React Hook useEffect has missing dependencies: 'P', 'gameState.values', and 'n'. Either include them or remove the dependency array.",["125"],["122"],["123"],{"desc":"126","fix":"127"},"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [P.board, history]",{"range":"132","text":"133"},"Update the dependencies array to be: [keyHandler, value]",{"range":"134","text":"135"},"Update the dependencies array to be: [P, P.board, gameState.values, hasQuit, n]",{"range":"136","text":"137"},[1047,1056],"[P.board, history]",[1142,1149],"[keyHandler, value]",[1918,1936],"[P, P.board, gameState.values, hasQuit, n]"]